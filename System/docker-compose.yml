services:
  frontend:
    build:
      context: ./Frontend/
    restart: always
    ports:
      - "8080:80"

  dataconnector:
    build:
      context: ./DataConnector/
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - database
      - influxdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
      USER_EMAIL: ${USER_EMAIL}
      USER_PASSWORD: ${USER_PASSWORD}
      INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_ADMIN_USER: ${INFLUXDB_ADMIN_USER}
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}

  scheduler:
    build:
      context: ./Scheduler/
      dockerfile: Dockerfile.${ENV}
    restart: always
    ports:
      - "5001:5000"
    depends_on:
      - dataconnector

  database:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"

  influxdb:
    image: influxdb:2.7.7
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
      - influxdb-config:/etc/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_ADMIN_USER}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: initialBucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN}

volumes:
  influxdb-storage:
  influxdb-config: